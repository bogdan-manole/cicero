// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	api "github.com/hashicorp/nomad/api"
	mock "github.com/stretchr/testify/mock"

	pgx "github.com/jackc/pgx/v4"

	uuid "github.com/google/uuid"
)

// NomadEventRepository is an autogenerated mock type for the NomadEventRepository type
type NomadEventRepository struct {
	mock.Mock
}

// GetEventAllocByNomadJobId provides a mock function with given fields: _a0
func (_m *NomadEventRepository) GetEventAllocByNomadJobId(_a0 uuid.UUID) ([]map[string]interface{}, error) {
	ret := _m.Called(_a0)

	var r0 []map[string]interface{}
	if rf, ok := ret.Get(0).(func(uuid.UUID) []map[string]interface{}); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]map[string]interface{})
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uuid.UUID) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetLastNomadEvent provides a mock function with given fields:
func (_m *NomadEventRepository) GetLastNomadEvent() (uint64, error) {
	ret := _m.Called()

	var r0 uint64
	if rf, ok := ret.Get(0).(func() uint64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint64)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Save provides a mock function with given fields: _a0, _a1
func (_m *NomadEventRepository) Save(_a0 pgx.Tx, _a1 *api.Event) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(pgx.Tx, *api.Event) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
